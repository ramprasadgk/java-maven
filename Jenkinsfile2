@Library('test') _

pipeline {
    
agent any
 stages {
         stage('stage 00'){
             steps{
                 script{
                    echo sh(returnStdout: true, script: 'env')
                    //gitHubPRStatus statusMessage: 'runss'
                    //githubPRAddLabels labelProperty: labels ( "newlabel\n another" )
                    step([$class: 'GitHubIssueNotifier',
                          issueAppend: true,
                          issueLabel: '',
                          issueTitle: '$JOB_NAME $BUILD_DISPLAY_NAME failed'])

                   
                   
                    echo 'done'
      
                 }
             }
         }
     stage('first'){
         steps{
             script {
                logs.info 'Starting'
                logs.warning 'Nothing to do!'
                sayHello()
                sayHello
                sayHello('sdf')
        
                
             }
         }
     }
 }
 
 post {
    always {

          step([$class: 'GitHubIssueNotifier',
               issueAppend: true])

}
